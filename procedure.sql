USE [DBACINTRANET_TEST]
GO
/****** Object:  StoredProcedure [dbo].[USP_VACA_PERIODO]    Script Date: 19/03/2025 17:28:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/**************************************************************************************************
Objetivo				: Realizar el listado y calculo de las vacaciones agrupado por periodo. para un colaborador
Autor						: Salomon Memenza C.
Fecha Creación	: 16/01/2017
***************************************************************************************************
@001 USUARIO FECHA Acción realizada
**************************************************************************************************/
ALTER PROCEDURE [dbo].[USP_VACA_PERIODO_DETALLE]
	@VI_CO_TRAB AS VARCHAR(20),
	@VI_CO_EMPR AS VARCHAR(3),
	@VI_FECHA_CORTE AS DATE,
  @VI_NU_TRUNCOS AS DECIMAL(5,2)
AS
	SET NOCOUNT ON
	
	DECLARE @VL_ULT_PERIODO AS INT
	DECLARE @VL_CURR_PERIODO AS INT
	DECLARE @VL_FE_INGR_EMPR AS DATE
	DECLARE @VL_NU_VACA_GANA AS INT
	DECLARE @VL_NOM_TRAB AS VARCHAR(250)
	DECLARE @VL_NO_EMPR AS VARCHAR(50)

	DECLARE @VL_MES AS VARCHAR(2)
	DECLARE @VL_DIA AS VARCHAR(2)
	DECLARE @VL_FECHA_PERIODO AS DATE

	DECLARE @VL_GANADAS AS INT
	DECLARE @VL_GOZADAS AS INT
	DECLARE @VL_TRUNCO AS DECIMAL(5,2)
	DECLARE @VL_SALDO AS DECIMAL(5,2)
	DECLARE @VL_ESTADO AS VARCHAR(20)

	DECLARE @VL_SQL_TABLE AS NVARCHAR(MAX)

	-- TABLA AGRUPADA DEL PERIODO
	CREATE TABLE #TW_PERIODO (
		PE_VACA VARCHAR(8) NULL,
		CO_EMPR VARCHAR(2) NULL,        
		DE_NOMB_CORT VARCHAR(200) NULL,
		CO_TRAB VARCHAR(20) NULL,        
		NOMBRES	VARCHAR(200) NULL,
		FE_INGR_EMPR  DATE NULL,
		GANADAS 		INT NULL,
		FISICAS			DECIMAL (5,2) NULL,
		TRABAJADAS	DECIMAL (5,2) NULL
	)

	-- TABLA DE PERIODO CALCULADO
	CREATE TABLE #TW_CALCULO_PERIODO (        
		CO_EMPR   VARCHAR(2) NULL,        
		NO_EMPR   VARCHAR(200) NULL,
		CO_TRAB   VARCHAR(20) NULL,        
		NO_TRAB		VARCHAR(200) NULL,        
		FE_INGR_EMPR  DATE NULL,        
		PE_VACA		VARCHAR(9) NULL, 
		GANADAS	INT NULL,   
		GOZADAS INT NULL,        
		TRUNCAS DECIMAL(5,2) NULL,
		SALDO   DECIMAL(5,2) NULL,
		ESTADO	VARCHAR(50) NULL
	)

	-- OBTENER EL NOMBRE DEL TRABAJADOR Y EMPRESA POR SEPARADO
	SELECT @VL_NOM_TRAB = RTRIM(NO_APEL_PATE) + ' ' + RTRIM(NO_APEL_MATE) + ' ' + RTRIM(NO_TRAB) FROM OFISIS.OFIPLAN.dbo.TMTRAB_PERS WHERE CO_TRAB = @VI_CO_TRAB
	SELECT @VL_NO_EMPR = DE_NOMB_CORT FROM OFISIS.OFIPLAN_030420.dbo.TMEMPR WHERE CO_EMPR = @VI_CO_EMPR
	
	-- OBTENER EL ULTIMO PERIDOD REGISTRADO DE VACACIONES
	SELECT TOP 1 @VL_ULT_PERIODO = RIGHT(MAX(PE_VACA), 4)
	FROM OFISIS.OFIPLAN_030420.dbo.TDVACA 
	WHERE CO_TRAB = @VI_CO_TRAB AND CO_EMPR = @VI_CO_EMPR	AND TI_VACA IN ('TRA','FIS')	AND TI_SITU = 'APR'	AND FE_INIC_VACA <= @VI_FECHA_CORTE
	GROUP BY PE_VACA ORDER BY PE_VACA DESC

	-- OBTENER LA FECHA DE INGRESO Y EL NUMERO DE VACACIONES QUE GANA POR AÑO EL COLABORADOR
	SELECT @VL_FE_INGR_EMPR = FE_INGR_EMPR, @VL_NU_VACA_GANA = NU_DERE_GVAC FROM OFISIS.OFIPLAN_030420.dbo.TMTRAB_EMPR WHERE CO_TRAB = @VI_CO_TRAB AND CO_EMPR = @VI_CO_EMPR
	-- CALCULAR EL PERIODO ACTUAL
	SELECT @VL_MES = MONTH(@VL_FE_INGR_EMPR), @VL_DIA = DAY(@VL_FE_INGR_EMPR);
	SELECT @VL_FECHA_PERIODO = CONVERT(DATE,@VL_DIA+'/'+@VL_MES+'/'+ CONVERT(VARCHAR(4),YEAR(@VI_FECHA_CORTE)),103);

	IF @VL_FECHA_PERIODO <= CONVERT(DATE,@VI_FECHA_CORTE,103)
		SET @VL_CURR_PERIODO = YEAR(@VI_FECHA_CORTE)+1
	ELSE
		SET @VL_CURR_PERIODO = YEAR(@VI_FECHA_CORTE)

	-- EVALUAR SI EL ULTIMO PERIODO DE VACACIONES ES EL PERIODO ACTUAL EN EL QUE SE ENCUENTRA EL COLABORADOR
  IF @VL_ULT_PERIODO < @VL_CURR_PERIODO
		BEGIN
			-- POR CADA PERIODO NO ENCONTRADO, SE INSERTA UN REGISTRO NUEVO
			WHILE @VL_ULT_PERIODO < @VL_CURR_PERIODO
				BEGIN
					-- SI ES EL PERIODO ACTUAL, SETEAMOS EL VALOR DE TRUNCOS
					IF @VL_ULT_PERIODO = @VL_CURR_PERIODO - 1
						BEGIN
							SET @VL_GANADAS = 0
							SET @VL_TRUNCO = @VI_NU_TRUNCOS
							SET @VL_ESTADO = 'No Disponible'
						END
					ELSE
						-- CASO CONTRARIO, YA QUE NO GOZO NADA, SETEAMOS EL DATO DE GANADO CON EL TOTAL GANADO
						BEGIN
							SET @VL_GANADAS = @VL_NU_VACA_GANA
							SET @VL_TRUNCO = 0
							SET @VL_ESTADO = 'Pendiente'
						END
		
					-- NO SE GOZO NINGUNO, ASI QUE LOS GOZADOS SON 0
					-- EL SALDO = A GANADOS + TRUNCO - GOZADOS
					SET @VL_GOZADAS = 0
					SET @VL_SALDO = (@VL_GANADAS + @VL_TRUNCO) - @VL_GOZADAS
					
					INSERT INTO #TW_CALCULO_PERIODO
					VALUES (@VI_CO_EMPR, @VL_NO_EMPR, @VI_CO_TRAB, @VL_NOM_TRAB, @VL_FE_INGR_EMPR, CONVERT(VARCHAR(4),@VL_ULT_PERIODO)+'-'+CONVERT(VARCHAR(4),@VL_ULT_PERIODO+1),@VL_GANADAS,@VL_GOZADAS,@VL_TRUNCO,@VL_SALDO,@VL_ESTADO)
					-- SETEAMOS EL SIGUIENTE PERIODO
					SET @VL_ULT_PERIODO = @VL_ULT_PERIODO + 1
				END
		END

	-- PROCESAR LA INFORMACION AGRUPARA POR PERIODO
	INSERT INTO #TW_PERIODO
	SELECT 
		PE_VACA, V.CO_EMPR,	E.DE_NOMB_CORT,	V.CO_TRAB, @VL_NOM_TRAB AS 'NOMBRES',	TE.FE_INGR_EMPR,
		CASE
			WHEN CONVERT(DATE, STR(DAY(TE.FE_INGR_EMPR),2)+'/'+STR(MONTH(TE.FE_INGR_EMPR),2)+'/'+RIGHT(PE_VACA,4),103) <= @VI_FECHA_CORTE THEN TE.NU_DERE_GVAC
			ELSE 0
		END AS 'GANADAS',
		SUM(PATINDEX(V.TI_VACA, 'FIS') * ISNULL(V.NU_DIAS,0)) AS 'FISICAS',	
		SUM(PATINDEX(V.TI_VACA, 'TRA') * ISNULL(V.NU_DIAS,0)) AS 'TRABAJADAS'
	FROM OFISIS.OFIPLAN_030420.dbo.TDVACA AS V
	INNER JOIN OFISIS.OFIPLAN_030420.dbo.TMTRAB_EMPR AS TE ON TE.CO_EMPR = V.CO_EMPR AND TE.CO_TRAB = V.CO_TRAB AND V.FE_INIC_VACA >= TE.FE_INGR_EMPR 
	INNER JOIN OFISIS.OFIPLAN_030420.dbo.TMTRAB_PERS AS TP ON TP.CO_TRAB = TE.CO_TRAB
	INNER JOIN OFISIS.OFIPLAN_030420.dbo.TMEMPR AS E ON E.CO_EMPR = V.CO_EMPR
	WHERE V.TI_VACA IN ('TRA','FIS') AND  V.TI_SITU = 'APR'
	AND V.FE_INIC_VACA <= @VI_FECHA_CORTE AND V.CO_EMPR = @VI_CO_EMPR AND V.CO_TRAB = @VI_CO_TRAB
	GROUP BY V.CO_EMPR,	V.CO_TRAB, PE_VACA, E.DE_NOMB_CORT,
		RTRIM(TP.NO_APEL_PATE) + ' ' + RTRIM(TP.NO_APEL_MATE) + ' ' + RTRIM(TP.NO_TRAB),TE.FE_INGR_EMPR, TE.NU_DERE_GVAC


	-- INSERTAR EL CALCULO EN BASE A LA AGRUPACION DE PERIODO
	INSERT INTO #TW_CALCULO_PERIODO
	SELECT CO_EMPR, DE_NOMB_CORT, CO_TRAB, NOMBRES,	FE_INGR_EMPR, 
	LEFT(PE_VACA, 4)+'-'+ RIGHT(PE_VACA, 4) AS PE_VACA, CONVERT(INT,GANADAS), 
	CONVERT(INT,FISICAS + TRABAJADAS), CASE WHEN @VL_CURR_PERIODO = RIGHT(PE_VACA, 4) THEN @VI_NU_TRUNCOS ELSE 0	END,
	CASE
		WHEN @VL_CURR_PERIODO = RIGHT(PE_VACA, 4) THEN @VI_NU_TRUNCOS
		ELSE (GANADAS)-(FISICAS+TRABAJADAS)
		/*(GANADAS + CASE WHEN @VL_CURR_PERIODO = RIGHT(PE_VACA, 4) THEN @VI_NU_TRUNCOS ELSE 0 END)-(FISICAS+TRABAJADAS),*/
	END,
	CASE 
		WHEN @VL_CURR_PERIODO = RIGHT(PE_VACA, 4) THEN 'No Disponible'
		WHEN CONVERT(INT,GANADAS-(FISICAS+TRABAJADAS)) > 0 AND @VL_CURR_PERIODO - RIGHT(PE_VACA, 4) = 1 THEN 'Pendiente'
		WHEN CONVERT(INT,GANADAS-(FISICAS+TRABAJADAS)) > 0 AND @VL_CURR_PERIODO - RIGHT(PE_VACA, 4) > 1 Then 'Vencido'
		ELSE 'Cerrado'
	END AS 'ESTADO'
	FROM #TW_PERIODO
	ORDER BY PE_VACA DESC

	--RETORNAMOS LOS REGISTROS RESPECTIVOS
	SELECT CO_EMPR, NO_EMPR, CO_TRAB, NO_TRAB, CONVERT(VARCHAR(10),FE_INGR_EMPR,103) AS 'FECHA_INGRESO', PE_VACA, GANADAS, GOZADAS, TRUNCAS, SALDO, ESTADO 
	FROM #TW_CALCULO_PERIODO
	-- AÑADIR EL TOTAL
	UNION ALL
	SELECT '','','','','','  TOTAL', SUM(GANADAS), SUM(GOZADAS), SUM(TRUNCAS), SUM(SALDO),''
	FROM #TW_CALCULO_PERIODO GROUP BY CO_TRAB
	ORDER BY PE_VACA DESC
	RETURN